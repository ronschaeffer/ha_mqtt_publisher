[tool.poetry]
name = "ronschaeffer-mqtt-publisher"
version = "0.1.4"
description = "An MQTT publisher package"
authors = ["ronschaeffer <ron@ronschaeffer.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/ronschaeffer/mqtt_publisher"
repository = "https://github.com/ronschaeffer/mqtt_publisher"
keywords = ["mqtt", "publisher", "iot"]
packages = [
    { include = "mqtt_publisher", from = "src" }
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
paho-mqtt = "2.1.0"
pyyaml = "^6.0"
typing-extensions = "^4.7.0"  # For advanced typing support
python-dotenv = "^1.1.1"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.4"
pytest-mock = "^3.10.0"
ruff = "^0.12.7"
codespell = "^2.1.0"
pytest-cov = "^6.2.1"

[tool.poetry.group.automation.dependencies]
commitizen = { version = ">=3,<5", optional = true }

[tool.pytest.ini_options]
pythonpath = [
    "src"
]
testpaths = [
    "tests"
]

# Ruff configuration
[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
# Enable the same rules as Home Assistant
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "UP",     # pyupgrade
    "RUF",    # ruff-specific rules
]

ignore = [
    "E501",   # line too long (handled by formatter)
    "UP007",  # Use `X | Y` for type annotations (conflicts with Python 3.9 support)
    "UP038",  # Use `X | Y` in isinstance call (conflicts with Python 3.9 support)
]

[tool.ruff.lint.isort]
force-sort-within-sections = true
combine-as-imports = true

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "lf"

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.1.4"
tag_format = "v$version"
version_files = [
    "pyproject.toml:version",
    "src/mqtt_publisher/__init__.py:__version__"
]
update_changelog_on_bump = true
