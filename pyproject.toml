[project]
name = "ha-mqtt-publisher"
version = "0.3.3"
description = "An MQTT publisher package"
readme = "README.md"
license = { text = "MIT" }
authors = [{ name = "ronschaeffer" }]
requires-python = ">=3.11"
keywords = ["mqtt", "publisher", "iot"]
dependencies = [
    "paho-mqtt>=2.1.0",
    "pyyaml>=6.0",
    "python-dotenv>=1.1.1",
    "typing-extensions>=4.7.0",
]

[project.urls]
Homepage = "https://github.com/ronschaeffer/ha_mqtt_publisher"
Repository = "https://github.com/ronschaeffer/ha_mqtt_publisher"

[project.optional-dependencies]
dev = [
    "pytest>=8.3.4",
    "pytest-mock>=3.10.0",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.7",
    "codespell>=2.1.0",
    "pre-commit>=4.2.0",
]

[tool.poetry]
packages = [
    { include = "ha_mqtt_publisher", from = "src" }
]
package-mode = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.automation.dependencies]
commitizen = { version = ">=3,<5", optional = true }

[tool.pytest.ini_options]
pythonpath = [
    "src"
]
testpaths = [
    "tests"
]

# Ruff configuration
[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
# Enable the same rules as Home Assistant
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "UP",     # pyupgrade
    "RUF",    # ruff-specific rules
]

ignore = [
    "E501",   # line too long (handled by formatter)
]

[tool.ruff.lint.isort]
force-sort-within-sections = true
combine-as-imports = true

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "lf"

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.2.0"
tag_format = "v$version"
version_files = [
    "pyproject.toml:project.version",
    "src/ha_mqtt_publisher/__init__.py:__version__"
]
update_changelog_on_bump = true
