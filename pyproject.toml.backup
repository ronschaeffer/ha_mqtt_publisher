[tool.poetry]
name = "mqtt-publisher"
version = "0.1.0"
description = "An MQTT publisher package"
authors = ["Your Name <your.email@example.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/ronschaeffer/mqtt_publisher"
repository = "https://github.com/ronschaeffer/mqtt_publisher"
keywords = ["mqtt", "publisher", "iot"]
packages = [
    { include = "mqtt_publisher" },
    { include = "ha_mqtt_discovery" }
]

[tool.poetry.dependencies]
python = ">=3.9"
paho-mqtt = "^1.6.1"
pyyaml = "^6.0"
typing-extensions = "^4.7.0"  # For advanced typing support

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.4"
pytest-mock = "^3.10.0"
ruff = "^0.12.7"
mypy = "^1.0.0"
types-PyYAML = "^6.0.12"
types-paho-mqtt = "^1.6"
codespell = "^2.1.0"
pre-commit = "^2.15.0"

[tool.pytest.ini_options]
pythonpath = [
    "."
]
testpaths = [
    "tests"
]

# Ruff configuration
[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
# Enable the same rules as Home Assistant
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "UP",     # pyupgrade
    "RUF",    # ruff-specific rules
]

ignore = [
    "E501",   # line too long (handled by formatter)
]

[tool.ruff.lint.isort]
force-sort-within-sections = true
combine-as-imports = true

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "lf"
