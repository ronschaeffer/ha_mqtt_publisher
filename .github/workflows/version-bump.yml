name: Auto Version Bump

on:
  workflow_dispatch:
    inputs:
      bump_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      create_release:
        description: 'Create GitHub release'
        required: false
        default: true
        type: boolean

permissions:
  contents: write
  pull-requests: write

jobs:
  bump-version:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Get current version
        id: current_version
        run: |
          echo "version=$(poetry version --short)" >> $GITHUB_OUTPUT

      - name: Bump version
        run: |
          poetry version ${{ github.event.inputs.bump_type }}
          echo "NEW_VERSION=$(poetry version --short)" >> $GITHUB_ENV

      - name: Synchronize versions
        run: |
          python scripts/sync_versions.py

      - name: Update CHANGELOG
        run: |
          # Create changelog entry (basic version)
          if [ ! -f CHANGELOG.md ]; then
            echo "# Changelog" > CHANGELOG.md
            echo "" >> CHANGELOG.md
            echo "All notable changes to this project will be documented in this file." >> CHANGELOG.md
            echo "" >> CHANGELOG.md
          fi
          
          # Add new version entry
          sed -i "3i\\## [$NEW_VERSION] - $(date +%Y-%m-%d)\\n\\n### Added\\n- Version bump to $NEW_VERSION\\n" CHANGELOG.md

      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add pyproject.toml src/mqtt_publisher/__init__.py CHANGELOG.md
          git commit -m "chore: bump version to $NEW_VERSION"

      - name: Create and push tag
        run: |
          git tag -a "v$NEW_VERSION" -m "Release v$NEW_VERSION"
          git push origin main
          git push origin "v$NEW_VERSION"

      - name: Create GitHub Release
        if: ${{ github.event.inputs.create_release == 'true' }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.NEW_VERSION }}
          release_name: Release v${{ env.NEW_VERSION }}
          body: |
            ## Changes in v${{ env.NEW_VERSION }}
            
            Version bump from ${{ steps.current_version.outputs.version }} to ${{ env.NEW_VERSION }}.
            
            See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for detailed changes.
            
            ## Installation
            
            ```bash
            pip install ronschaeffer-mqtt-publisher==${{ env.NEW_VERSION }}
            ```
            
            Or with Poetry:
            ```bash
            poetry add ronschaeffer-mqtt-publisher@${{ env.NEW_VERSION }}
            ```
          draft: false
          prerelease: false
